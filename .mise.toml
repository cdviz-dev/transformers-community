[settings]
experimental = true

[tools]
"dprint" = "latest"
"ubi:davidB/json-simple-obfuscator" = "latest"
"ubi:cdviz-dev/cdviz-collector" = "latest"

[tasks."format"]
alias = "fmt"
depends = ["obfuscate"]
description = "Format the code and sort dependencies"
run = [
  "dprint fmt",
]

[tasks.obfuscate]
description = "obfuscate some data into the samples"
run = [
  "json-simple-obfuscator */inputs/*/*.json",
]

[tasks."test"]
depends = ["test:transform:*"]

[tasks."ci"]
depends = ["test"]
run = "cdviz-collector --version"
description = "set of tasks run by CI"

[tasks."test:transform:passthrough"]
description = "run the transformation example passthrough (use `--mode review` to review and update)"
run = """cdviz-collector \
  transform \
  --disable-otel \
  --mode {{option(name="mode", default="check")}} \
  --directory ./passthrough \
  --config ./cdviz-collector.toml \
  -t passthrough \
  --input ./inputs \
  --output ./outputs
"""

[tasks."test:transform:github_events"]
description = "run the transformation example github_events (use `--mode review` to review and update)"
run = """cdviz-collector \
  transform \
  --disable-otel \
  --mode {{option(name="mode", default="check")}} \
  --directory ./github_events \
  --config ./cdviz-collector.toml \
  -t github_events \
  --input ./inputs \
  --output ./outputs
"""

[tasks."test:transform:kubewatch_cloudevents"]
description = "run the transformation example kubewatch_cloudevents (cloudevents) (use `--mode review` to review and update)"
run = """cdviz-collector \
  transform \
  --disable-otel \
  --mode {{option(name="mode", default="check")}} \
  --directory ./kubewatch_cloudevents \
  --config ./cdviz-collector.toml \
  -t kubewatch_metadata,kubewatch_cloudevents \
  --input ./inputs \
  --output ./outputs
"""

[tasks."test:transform:argocd_notifications"]
description = "run the transformation example argocd_notifications (use `--mode review` to review and update)"
run = """cdviz-collector \
  transform \
  --disable-otel \
  --mode {{option(name="mode", default="check")}} \
  --directory ./argocd_notifications \
  --config ./cdviz-collector.toml \
  -t argocd_metadata,argocd_notifications \
  --input ./inputs \
  --output ./outputs
"""
